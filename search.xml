<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Dockerfile部署Springboot项目</title>
    <url>/2023/12/04/docker/dockerfile_deploy_springboot/</url>
    <content><![CDATA[<p>Dokcerfile官方文档：<a href="https://docs.docker.com/engine/reference/builder/">https://docs.docker.com/engine/reference/builder/</a><br>Docker仓库地址：<a href="https://hub.docker.com/">https://hub.docker.com/</a><br>官方镜像github地址：<a href="https://github.com/docker-library/official-images">https://github.com/docker-library/official-images</a></p>
<span id="more"></span>

<h1 id="Dockerfile创建运行环境"><a href="#Dockerfile创建运行环境" class="headerlink" title="Dockerfile创建运行环境"></a>Dockerfile创建运行环境</h1><p>环境要求：centos7.9.2009服务器 + JDK8</p>
<ul>
<li><p>编写Dockerfile</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM centos:centos7.9.2009</span><br><span class="line"></span><br><span class="line">LABEL version=<span class="string">&quot;1.0&quot;</span></span><br><span class="line">LABEL author=<span class="string">&quot;xg&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加并解压缩jdk安装包</span></span><br><span class="line">ADD ./jdk-8u381-linux-aarch64.tar.gz /usr/local/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装jdk</span></span><br><span class="line">RUN <span class="built_in">rm</span> -rf /usr/local/jdk-8u381-linux-aarch64.tar.gz &amp;&amp; yum clean all</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line">ENV JAVA_HOME=/usr/local/jdk1.8.0_381</span><br><span class="line">ENV PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置工作目录，在这个目录下存放springboot jar包</span></span><br><span class="line">WORKDIR /app</span><br><span class="line"></span><br><span class="line">CMD [<span class="string">&quot;bash&quot;</span>]</span><br></pre></td></tr></table></figure>
</li>
<li><p>构建镜像</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -t参数指定镜像名称以及版本，即：centos7/jdk8:1.0</span></span><br><span class="line">docker build -t centos7/jdk8:1.0 .</span><br></pre></td></tr></table></figure>
</li>
<li><p>查看镜像</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker images</span><br><span class="line"></span><br><span class="line"><span class="comment"># 出现下面内容表示构建成功</span></span><br><span class="line">REPOSITORY     TAG                 IMAGE ID       CREATED         SIZE</span><br><span class="line">centos7/jdk8   1.0                 44af210bd7d2   20 hours ago    503MB</span><br></pre></td></tr></table></figure></li>
</ul>
<h1 id="Dockerfile部署Springboot项目"><a href="#Dockerfile部署Springboot项目" class="headerlink" title="Dockerfile部署Springboot项目"></a>Dockerfile部署Springboot项目</h1><p>基于刚刚构建好的 centos7&#x2F;jdk8:1.0 环境，将springboot jar包部署到运行环境</p>
<ul>
<li><p>编写Dockerfile</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM centos7/jdk8:1.0</span><br><span class="line"></span><br><span class="line">LABEL version=<span class="string">&quot;1.0&quot;</span></span><br><span class="line">LABEL author=<span class="string">&quot;xg&quot;</span></span><br><span class="line"></span><br><span class="line">WORKDIR /app</span><br><span class="line"></span><br><span class="line">COPY ./boot-dockerfile-1.0-SNAPSHOT.jar /app/boot-dockerfile-1.0-SNAPSHOT.jar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 暴露Tomcat访问端口</span></span><br><span class="line">EXPOSE 8080</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行jar包</span></span><br><span class="line">CMD [<span class="string">&quot;java&quot;</span>, <span class="string">&quot;-jar&quot;</span>, <span class="string">&quot;boot-dockerfile-1.0-SNAPSHOT.jar&quot;</span>]</span><br></pre></td></tr></table></figure>
</li>
<li><p>构建Dockerfile</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build -t bootjar:1.0 .</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动Docker镜像</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -dit -p 8080:8080 bootjar:1.0</span><br></pre></td></tr></table></figure>
</li>
<li><p>测试</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl <span class="string">&quot;http://10.211.55.10:8080/hello?val=docker&quot;</span></span><br><span class="line"></span><br><span class="line">hello, docker</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot Jar瘦身</title>
    <url>/2024/01/01/springboot/springboot_Jar_thin/</url>
    <content><![CDATA[<p>&nbsp;&nbsp;由于springboot打出来的jar包含了第三方引入的jar包，所以这就会导致打出来的jar包臃肿而庞大，本文针对此问题对springboot jar包进行瘦身。<br /><br>&nbsp;&nbsp;三方jar包分离版：将第三方依赖的jar包导出到指定的目录下，在springboot jar包启动命令添加参数指定三方依赖jar包的路径。<br /><br>&nbsp;&nbsp;maven配置自动化版：三方依赖jar包分离，资源文件分离，打出的jar包只包含当前项目的class文件，同时在jar包的MANIFEST.MF文件中指定三方依赖jar包和资源文件的路径，启动脚本无需添加路径参数，达到自动化的效果。</p>
<span id="more"></span>

<h1 id="一、三方jar包分离版"><a href="#一、三方jar包分离版" class="headerlink" title="一、三方jar包分离版"></a>一、三方jar包分离版</h1><p>第一步：使用maven-dependency-jar插件将第三方依赖jar包分离到指定目录<br />第二步：使用springboot-maven-jar插件打出可执行jar包<br />第三步：jar包启动命令参数添加第三方依赖jar包的目录<br><a name="Ceboc"></a></p>
<h2 id="1-1、导出三方jar包"><a href="#1-1、导出三方jar包" class="headerlink" title="1.1、导出三方jar包"></a>1.1、导出三方jar包</h2><ul>
<li><p>可以通过解压工具，对 jar 进行解压，复制出 lib 下的依赖jar包（比较麻烦不推荐）</p>
</li>
<li><p>使用maven命令将三方依赖导出，建议使用绝对路径</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -DoutputDirectory参数指定jar包导出的目录</span></span><br><span class="line">mvn dependency:copy-dependencies -DoutputDirectory=/Users/guanxu/jar/lib -DincludeScope=runtime</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置到pom文件中，打包时自动将三方依赖导出，见1.2节pom文件配置(推荐使用)</p>
</li>
</ul>
<h2 id="1-2、pom文件配置"><a href="#1-2、pom文件配置" class="headerlink" title="1.2、pom文件配置"></a>1.2、pom文件配置</h2><ul>
<li>使用pom文件配置，自动将三方依赖导出到指定的目录<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-dependency-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!--将依赖的三方jar包, 导出到指定目录, 当前指定的是默认的target目录--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>copy-dependencies<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>copy-dependencies<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>/Users/guanxu/jar/lib<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">excludeTransitive</span>&gt;</span>false<span class="tag">&lt;/<span class="name">excludeTransitive</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">stripVersion</span>&gt;</span>false<span class="tag">&lt;/<span class="name">stripVersion</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">silent</span>&gt;</span>true<span class="tag">&lt;/<span class="name">silent</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--springboot打包插件(瘦身版), 不包含三方jar包--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--用来配置可执行jar包中Main-Class的类型，这里一定要设置为ZIP，使打的jar包中的Main-Class为PropertiesLauncher--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">layout</span>&gt;</span>ZIP<span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">&lt;!--将需要保留的jar包，按照groupId和artifactId（注意两个都是必填项）include进来。nothing代表不存在的依赖包，意思就是什么依赖包都不引入--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>nothing<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>nothing<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="1-3、启动jar包指定第三方jar包目录"><a href="#1-3、启动jar包指定第三方jar包目录" class="headerlink" title="1.3、启动jar包指定第三方jar包目录"></a>1.3、启动jar包指定第三方jar包目录</h2><p>使用java -jar命令时加上 -Dloader.path 参数指定第三方jar包的目录，因为上述操作三方jar导出的目录是&#x2F;Users&#x2F;guanxu&#x2F;lib，所以指定参数也是这个目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -Dloader.path=/Users/guanxu/jar/lib -jar xxx.jar</span><br></pre></td></tr></table></figure>

<h1 id="二、maven配置自动化版"><a href="#二、maven配置自动化版" class="headerlink" title="二、maven配置自动化版"></a>二、maven配置自动化版</h1><p>相比于第一种方式，可以更进一步简化jar包，不仅将第三方依赖jar包，并且将resources资源目录分离，同时在打可执行jar包的时候，将依赖jar包目录以及resources资源目录打到MANIFEST.MF文件中，无需在启动脚本添加路径参数即可启动<br />第一步：使用maven-dependency-jar插件将第三方依赖jar包分离到指定目录<br />第二步：使用maven-resources-plugin插件将resources资源文件分离到指定目录<br />第三步：使用maven-jar-plugin插件打出可执行jar包，同时指定三方依赖jar包目录，resources资源文件目录，一起打到MANIFEST.MF文件中</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--将依赖的三方jar包, 导出到指定目录, 当前指定的是target/lib目录--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-dependency-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>copy-dependencies<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>copy-dependencies<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>$&#123;project.build.directory&#125;/lib<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--是否排除间接依赖，间接依赖也要拷贝--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">excludeTransitive</span>&gt;</span>false<span class="tag">&lt;/<span class="name">excludeTransitive</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--是否带上版本号--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">stripVersion</span>&gt;</span>false<span class="tag">&lt;/<span class="name">stripVersion</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">silent</span>&gt;</span>true<span class="tag">&lt;/<span class="name">silent</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--依赖范围--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includeScope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">includeScope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--将资源文件, 导出到指定目录, 当前指定的是target/resources目录--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>copy-resources<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>copy-resources<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>$&#123;project.build.directory&#125;/resources<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">include</span>&gt;</span>*/**<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--maven构建的jar不包含依赖文件, 显式剔除配置文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-jar-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>$&#123;project.build.directory&#125;<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--将配置文件排除在jar包--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>*.properties<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>*.yml<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--生成MANIFEST.MF的设置--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--META-INF是否包含pom.xml和pom.properties文件--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">addMavenDescriptor</span>&gt;</span>false<span class="tag">&lt;/<span class="name">addMavenDescriptor</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--生成MANIFEST.MF的设置--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">useUniqueVersions</span>&gt;</span>false<span class="tag">&lt;/<span class="name">useUniqueVersions</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--指定第三方依赖的jar目录--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">addClasspath</span>&gt;</span>true<span class="tag">&lt;/<span class="name">addClasspath</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">classpathPrefix</span>&gt;</span>lib/<span class="tag">&lt;/<span class="name">classpathPrefix</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.xxx.MainApplication<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">manifestEntries</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--MANIFEST.MF 中 Class-Path 加入自定义路径，多个路径用空格隔开--&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--指定resources资源目录--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Class-Path</span>&gt;</span>resources/<span class="tag">&lt;/<span class="name">Class-Path</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">manifestEntries</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>springboot</category>
      </categories>
      <tags>
        <tag>springboot</tag>
      </tags>
  </entry>
  <entry>
    <title>curl命令</title>
    <url>/2023/08/06/web/curl_simple_command/</url>
    <content><![CDATA[<h1 id="1、概述"><a href="#1、概述" class="headerlink" title="1、概述"></a>1、概述</h1><p>curl 是常用的命令行工具，用来请求 Web 服务器。它的名字就是客户端（client）的 URL 工具的意思。<br />参考文档：<a href="https://www.ruanyifeng.com/blog/2019/09/curl-reference.html">https://www.ruanyifeng.com/blog/2019/09/curl-reference.html</a></p>
<span id="more"></span>

<h1 id="2、常用参数"><a href="#2、常用参数" class="headerlink" title="2、常用参数"></a>2、常用参数</h1><h2 id="X"><a href="#X" class="headerlink" title="-X"></a>-X</h2><p>-X 参数指定HTTP请求的方法，不写默认为GET请求</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 指定 post 请求</span></span><br><span class="line">$ curl -X POST http://www.example.com </span><br></pre></td></tr></table></figure>

<h2 id="H"><a href="#H" class="headerlink" title="-H"></a>-H</h2><p><strong>-H 参数添加HTTP请求的标头</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加 Content-Type: application/json 和 Accept-Language: en-US 两个请求标头</span></span><br><span class="line">$ curl -H <span class="string">&#x27;Accept-Language: en-US&#x27;</span> -H <span class="string">&#x27;Content-Type: application/json&#x27;</span> http://www.baidu.com</span><br></pre></td></tr></table></figure>

<h2 id="d-–data-urlencode"><a href="#d-–data-urlencode" class="headerlink" title="-d&#x2F;–data-urlencode"></a>-d&#x2F;–data-urlencode</h2><p><strong>-d 参数用于发送 POST 请求的数据体</strong>。使用 -d 参数以后，HTTP请求会自动加上标头Content-Type : application&#x2F;x-www-form-urlencoded。并且会自动将请求转为 POST 方法，因此可以省略-X POST。<br />–data-urlencode 参数等同于 -d ，发送POST请求的数据体，区别在于会自动将发送的数据进行URL编码。<br />多个参数可以使用使用多个 -d 参数，也可以使用 &amp; 进行参数拼接。<br />POST请求发送 json 格式请求体，可以配合使用<br /> -d ‘{“key”, “value”}’ -H ‘Content-Type: application&#x2F;json’ 。<br />-d 参数可以读取本地文本文件的数据，向服务器发送。例如使用<br />-d ‘@&#x2F;json.txt’ 参数即可使用本地文件json数据。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 多个参数</span></span><br><span class="line">$ curl -d <span class="string">&#x27;client_id=c1&#x27;</span> -d <span class="string">&#x27;client_secret=secret&#x27;</span> -d <span class="string">&#x27;grant_type=refresh_token&#x27;</span> -d <span class="string">&#x27;refresh_token=ef059eab-73e0-47d9-bf89-973603ae4551&#x27;</span> <span class="string">&#x27;http://localhost:12222/oauth/token&#x27;</span></span><br><span class="line">$ curl -d <span class="string">&#x27;client_id=c1&amp;client_secret=secret&amp;grant_type=refresh_token&amp;refresh_token=ef059eab-73e0-47d9-bf89-973603ae4551&#x27;</span> <span class="string">&#x27;http://localhost:12222/oauth/token&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送 json 格式请求体</span></span><br><span class="line">$ curl -d <span class="string">&#x27;&#123;&quot;username&quot;: &quot;admin&quot;, &quot;password&quot;: &quot;123&quot;&#125;&#x27;</span> -H <span class="string">&#x27;Content-Type: Application/json&#x27;</span> <span class="string">&#x27;http://localhost:8080/passwordLogin&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用本地文件</span></span><br><span class="line">$ curl -d <span class="string">&#x27;@json.txt&#x27;</span> <span class="string">&#x27;http://www.example.com&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL编码，对username的中文进行URL编码</span></span><br><span class="line">curl --data-urlencode <span class="string">&#x27;username=张三&#x27;</span> --data-urlencode <span class="string">&#x27;password=123&#x27;</span> <span class="string">&#x27;http://localhost:8080/form/passwordLogin&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="G"><a href="#G" class="headerlink" title="-G"></a>-G</h2><p>-G 参数用来构造URL的查询字符串，结合-d 参数进行url参数拼接，如果需要进行URL编码使用–data-urlencode 参数<br />如果不需要URL编码，url拼接更简单的方式是直接使用拼接后的url，用单引号引上即可，例如<code>curl &#39;http://www.example.com/page/list?pageNum=1&amp;pageSize=10&#39;</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># http://www.example.com/page/list?pageNum=1&amp;pageSize=10</span></span><br><span class="line">$ curl -G -d <span class="string">&#x27;pageNum=1&#x27;</span> -d <span class="string">&#x27;pageSize=10&#x27;</span> http://www.example.com/page</span><br><span class="line">$ curl <span class="string">&#x27;http://www.example.com/page?pageNum=1&amp;pageSize=10&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用URL编码</span></span><br><span class="line">curl -G --data-urlencode <span class="string">&#x27;username=张三&#x27;</span> --data-urlencode <span class="string">&#x27;password=123&#x27;</span> <span class="string">&#x27;http://localhost:8080/query/passwordLogin&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="i"><a href="#i" class="headerlink" title="-i"></a>-i</h2><p>-i 参数打印出服务器响应的 HTTP 标头。收到服务器回应后，先输出服务器回应的标头，然后空一行，再输出网页的源码。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ curl -i http://www.baidu.com</span><br><span class="line"></span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Accept-Ranges: bytes</span><br><span class="line">Cache-Control: private, no-cache, no-store, proxy-revalidate, no-transform</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Content-Length: 2381</span><br><span class="line">Content-Type: text/html</span><br><span class="line">Date: Sun, 06 Aug 2023 03:25:49 GMT</span><br><span class="line">Etag: <span class="string">&quot;588604c8-94d&quot;</span></span><br><span class="line">Last-Modified: Mon, 23 Jan 2017 13:27:36 GMT</span><br><span class="line">Pragma: no-cache</span><br><span class="line">Server: bfe/1.0.8.18</span><br><span class="line">Set-Cookie: BDORZ=27315; max-age=86400; domain=.baidu.com; path=/</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;!--STATUS OK--&gt;&lt;html&gt; &lt;<span class="built_in">head</span>&gt;&lt;meta http-equiv=content-type content=text/html;charset=utf-8&gt;&lt;meta http-equiv=X-UA-Compatible content=IE=Edge&gt;&lt;meta content=always name=referrer&gt;&lt;<span class="built_in">link</span> rel=stylesheet <span class="built_in">type</span>=text/css href=http://s1.bdstatic.com/r/www/cache/bdorz/baidu.min.css&gt;&lt;title&gt;百度一下，你就知道&lt;/title&gt;&lt;/head&gt; &lt;body <span class="built_in">link</span>=<span class="comment">#0000cc&gt; &lt;div id=wrapper&gt; &lt;div id=head&gt; &lt;div class=head_wrapper&gt; &lt;div class=s_form&gt; &lt;div class=s_form_wrapper&gt; &lt;div id=lg&gt; &lt;img hidefocus=true src=//www.baidu.com/img/bd_logo1.png width=270 height=129&gt; &lt;/div&gt; &lt;form id=form name=f action=//www.baidu.com/s class=fm&gt; &lt;input type=hidden name=bdorz_come value=1&gt; &lt;input type=hidden name=ie value=utf-8&gt; &lt;input type=hidden name=f value=8&gt; &lt;input type=hidden name=rsv_bp value=1&gt; &lt;input type=hidden name=rsv_idx value=1&gt; &lt;input type=hidden name=tn value=baidu&gt;&lt;span class=&quot;bg s_ipt_wr&quot;&gt;&lt;input id=kw name=wd class=s_ipt value maxlength=255 autocomplete=off autofocus&gt;&lt;/span&gt;&lt;span class=&quot;bg s_btn_wr&quot;&gt;&lt;input type=submit id=su value=百度一下 class=&quot;bg s_btn&quot;&gt;&lt;/span&gt; &lt;/form&gt; &lt;/div&gt; &lt;/div&gt; &lt;div id=u1&gt; &lt;a href=http://news.baidu.com name=tj_trnews class=mnav&gt;新闻&lt;/a&gt; &lt;a href=http://www.hao123.com name=tj_trhao123 class=mnav&gt;hao123&lt;/a&gt; &lt;a href=http://map.baidu.com name=tj_trmap class=mnav&gt;地图&lt;/a&gt; &lt;a href=http://v.baidu.com name=tj_trvideo class=mnav&gt;视频&lt;/a&gt; &lt;a href=http://tieba.baidu.com name=tj_trtieba class=mnav&gt;贴吧&lt;/a&gt; &lt;noscript&gt; &lt;a href=http://www.baidu.com/bdorz/login.gif?login&amp;amp;tpl=mn&amp;amp;u=http%3A%2F%2Fwww.baidu.com%2f%3fbdorz_come%3d1 name=tj_login class=lb&gt;登录&lt;/a&gt; &lt;/noscript&gt; &lt;script&gt;document.write(&#x27;&lt;a href=&quot;http://www.baidu.com/bdorz/login.gif?login&amp;tpl=mn&amp;u=&#x27;+ encodeURIComponent(window.location.href+ (window.location.search === &quot;&quot; ? &quot;?&quot; : &quot;&amp;&quot;)+ &quot;bdorz_come=1&quot;)+ &#x27;&quot; name=&quot;tj_login&quot; class=&quot;lb&quot;&gt;登录&lt;/a&gt;&#x27;);&lt;/script&gt; &lt;a href=//www.baidu.com/more/ name=tj_briicon class=bri style=&quot;display: block;&quot;&gt;更多产品&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div id=ftCon&gt; &lt;div id=ftConw&gt; &lt;p id=lh&gt; &lt;a href=http://home.baidu.com&gt;关于百度&lt;/a&gt; &lt;a href=http://ir.baidu.com&gt;About Baidu&lt;/a&gt; &lt;/p&gt; &lt;p id=cp&gt;&amp;copy;2017&amp;nbsp;Baidu&amp;nbsp;&lt;a href=http://www.baidu.com/duty/&gt;使用百度前必读&lt;/a&gt;&amp;nbsp; &lt;a href=http://jianyi.baidu.com/ class=cp-feedback&gt;意见反馈&lt;/a&gt;&amp;nbsp;京ICP证030173号&amp;nbsp; &lt;img src=//www.baidu.com/img/gs.gif&gt; &lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="b"><a href="#b" class="headerlink" title="-b"></a>-b</h2><p>-b 参数用来向服务器发送Cookie<br />发送多个Cookie，可以使用英文分号;进行分隔<br />-b 参数后接文件路径，也可以读取本地文件来发送Cookie</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成一个标头Cookie: foo=bar，向服务器发送一个名为foo、值为bar的 Cookie</span></span><br><span class="line">$ curl -b <span class="string">&#x27;foo=bar&#x27;</span> http://www.example.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送两个Cookie</span></span><br><span class="line">$ curl -b <span class="string">&#x27;foo1=bar1;foo2=bar2&#x27;</span> http://www.example.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取本地文件Cookie</span></span><br><span class="line">$ curl -b cookie.txt http://www.example.com</span><br></pre></td></tr></table></figure>

<h2 id="A"><a href="#A" class="headerlink" title="-A"></a>-A</h2><p>-A 参数指定客户端的用户代理标头，即User-Agent。curl 的默认用户代理字符串是curl&#x2F;[version]<br />也可以通过 -H 参数直接指定标头，更改User-Agent</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将用户代理标头改成 Chrome 浏览器</span></span><br><span class="line">$ curl -A <span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36&#x27;</span></span><br><span class="line">$ curl -H <span class="string">&#x27;User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="e"><a href="#e" class="headerlink" title="-e"></a>-e</h2><p>-e 参数用来设置HTTP的标头Referer，表示请求的来源<br />也可以通过 -H 参数直接指定标头，更改Referer</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将请求来源设置为google.com</span></span><br><span class="line">curl -e <span class="string">&#x27;https://google.com?q=example&#x27;</span> https://www.example.com</span><br><span class="line">curl -H <span class="string">&#x27;Referer: https://google.com?q=example&#x27;</span> https://www.example.com</span><br></pre></td></tr></table></figure>

<h2 id="o"><a href="#o" class="headerlink" title="-o"></a>-o</h2><p>-o 参数将服务器的回应保存成文件，等同于wget命令，后接参数可以指定文件下载的路径以及名称</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将阿里云yum镜像源文件下载到/etc/yum.repos.d/CentOS-Base.repo</span></span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></table></figure>

<h1 id="3、curl简单实践"><a href="#3、curl简单实践" class="headerlink" title="3、curl简单实践"></a>3、curl简单实践</h1><p>需求：使用curl命令来实现oauth2.0密码模式获取token，以及使用token发送需要认证的请求。</p>
<ul>
<li>获取token</li>
<li>使用token来发送需要登录的请求<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1.获取access_token</span></span><br><span class="line">$ curl -i -d <span class="string">&#x27;username=root&#x27;</span> -d <span class="string">&#x27;password=123&#x27;</span> -d <span class="string">&#x27;grant_type=password&#x27;</span> -d <span class="string">&#x27;client_id=c1&#x27;</span> -d <span class="string">&#x27;client_secret=secret&#x27;</span> -d <span class="string">&#x27;redirect_uri=http://127.0.0.1:12222/open/sucess&#x27;</span> <span class="string">&#x27;http://localhost:12222/oauth/token&#x27;</span></span><br><span class="line"></span><br><span class="line">HTTP/1.1 200</span><br><span class="line">Cache-Control: no-store</span><br><span class="line">Pragma: no-cache</span><br><span class="line">X-Content-Type-Options: nosniff</span><br><span class="line">X-XSS-Protection: 1; mode=block</span><br><span class="line">X-Frame-Options: DENY</span><br><span class="line">Content-Type: application/json;charset=UTF-8</span><br><span class="line">Transfer-Encoding: chunked</span><br><span class="line">Date: Sun, 06 Aug 2023 12:45:50 GMT</span><br><span class="line"></span><br><span class="line">&#123;<span class="string">&quot;access_token&quot;</span>:<span class="string">&quot;36f4c522-909b-46a1-a3e7-d15343b8419e&quot;</span>,<span class="string">&quot;token_type&quot;</span>:<span class="string">&quot;bearer&quot;</span>,<span class="string">&quot;refresh_token&quot;</span>:<span class="string">&quot;ba92d79a-2fcd-430d-8a0f-04fd39206195&quot;</span>,<span class="string">&quot;expires_in&quot;</span>:3599,<span class="string">&quot;scope&quot;</span>:<span class="string">&quot;all&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.携带token访问资源</span></span><br><span class="line">curl -i -H <span class="string">&#x27;Authorization: Bearer 36f4c522-909b-46a1-a3e7-d15343b8419e&#x27;</span> http://localhost:10000/hello</span><br><span class="line"></span><br><span class="line">HTTP/1.1 200</span><br><span class="line">Vary: Origin</span><br><span class="line">Vary: Access-Control-Request-Method</span><br><span class="line">Vary: Access-Control-Request-Headers</span><br><span class="line">X-Content-Type-Options: nosniff</span><br><span class="line">X-XSS-Protection: 1; mode=block</span><br><span class="line">Cache-Control: no-cache, no-store, max-age=0, must-revalidate</span><br><span class="line">Pragma: no-cache</span><br><span class="line">Expires: 0</span><br><span class="line">X-Frame-Options: DENY</span><br><span class="line">Content-Type: text/plain;charset=UTF-8</span><br><span class="line">Content-Length: 108</span><br><span class="line">Date: Sun, 06 Aug 2023 12:47:37 GMT</span><br><span class="line"></span><br><span class="line">&#123;<span class="string">&quot;success&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;code&quot;</span>:<span class="string">&quot;200&quot;</span>,<span class="string">&quot;msg&quot;</span>:<span class="string">&quot;成功&quot;</span>,<span class="string">&quot;respTime&quot;</span>:<span class="string">&quot;2023-08-06 20:47:37&quot;</span>,<span class="string">&quot;data&quot;</span>:<span class="string">&quot;hello, you have logon&quot;</span>&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>网络</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2023/10/15/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
